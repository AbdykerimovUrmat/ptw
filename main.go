package main

import (
	"database/sql"
	"log"
	"net/http"

	"github.com/gin-gonic/gin"
	_ "github.com/lib/pq"
)

type Data struct {
	ID    int    `json:"id"`
	Name  string `json:"name"`
	Value string `json:"value"`
}

func main() {
	// Initialize Gin router
	r := gin.Default()

	// Connect to the database
	db, err := sql.Open("postgres", "postgres://user:password@localhost:5432/mydb?sslmode=disable")
	if err != nil {
		log.Fatalf("Failed to connect to the database: %v", err)
	}
	defer db.Close()

	// queries := New(db) // Generated by SQLC

	// Endpoint to get data
	r.GET("/data", func(c *gin.Context) {
		// data, err := queries.GetData(c)
		arr := []string{"Urmat", "Akram"}
		if err != nil {
			log.Printf("Failed to fetch data: %v", err)
			c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to fetch data"})
			return
		}
		c.JSON(http.StatusOK, arr)
	})

	// Start the server
	log.Println("Server is running on port 8080")
	if err := r.Run(":8080"); err != nil {
		log.Fatalf("Failed to start the server: %v", err)
	}
}
